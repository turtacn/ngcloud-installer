FROM golang:1.13-alpine

ARG DAPPER_HOST_ARCH
ENV ARCH $DAPPER_HOST_ARCH



## alpine source: turta
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
RUN apk -U add bash git gcc musl-dev docker vim less file curl wget ca-certificates


ARG http_proxy=$http_proxy
ARG https_proxy=$https_proxy
ARG no_proxy=$no_proxy
ENV http_proxy $http_proxy
ENV https_proxy $https_proxy
ENV no_proxy $no_proxy
ENV HTTP_PROXY $http_proxy
ENV HTTPS_PROXY $https_proxy

RUN env | grep -i proxy

RUN go get -d golang.org/x/lint/golint
RUN git -C /go/src/golang.org/x/lint/golint checkout -b current 06c8688daad7faa9da5a0c2f163a3d14aac986ca
RUN go install golang.org/x/lint/golint && \
    rm -rf /go/src /go/pkg
RUN if [ "${ARCH}" == "amd64" ]; then \
        curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.27.0; \
    fi

RUN go get -d github.com/rancher/trash
RUN git -C /go/src/github.com/rancher/trash checkout -b current v0.2.6
RUN go install github.com/rancher/trash && \
    rm -rf /go/src /go/pkg

ENV DAPPER_ENV REPO TAG DRONE_TAG
ENV DAPPER_SOURCE /go/src/github.com/rancher/k3os/
ENV DAPPER_OUTPUT ./build ./dist
ENV DAPPER_DOCKER_SOCKET true
ENV TRASH_CACHE ${DAPPER_SOURCE}/.trash-cache
ENV HOME ${DAPPER_SOURCE}
WORKDIR ${DAPPER_SOURCE}
ENV GO111MODULE off
ENV GOPROXY  "https://proxy.golang.com.cn,direct"
ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
